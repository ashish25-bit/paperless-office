block content
    include lay_head
    .chats_con
        .chat_names
            button(class="menu_chat_btn") M
            .menu_options
                p.create_group_chat.menu_option Create Group
            p.po_chats PaperLess Office
            .btn_chats_groups
                button(class="msg_con_display") Messages
                button(class="chats_con_display") People
                button(class="group_con_display") Groups
            p.pop_up_msg
            .container_msg_chats
                .message
                    if(messages.length)
                        -messages.forEach(message => {
                            if(message.room.includes('+'))
                                -var index = info.connections.findIndex(conn => (conn.id>user.id?`${user.id}+${conn.id}`:`${conn.id}+${user.id}`) == message.room)
                                if(index>=0)
                                    div(class='msg_recent_con' personal data-connection-id=info.connections[index].id data-room=message.room)
                                        p(class='msg_recent_name')= info.connections[index].Name
                                        p(class='msg_recent_date')= message.Date
                                        div(class='msg_recent_msg')= message.message
                                        p(class='msg_recent_time')= message.Time
                                    
                            else 
                                -var index = info.groups.findIndex(g => g.id.toString() == message.room)
                                if(index>=0)
                                    div(class='msg_recent_con' group data-group-id=info.groups[index].id data-room=message.room)
                                        p(class='msg_recent_name')= info.groups[index].Name
                                        p(class='msg_recent_date')= message.Date
                                        div(class='msg_recent_msg')= message.message
                                        p(class='msg_recent_time')= message.Time
                        -})
                    else 
                        p No New Messages
                .chats
                    if(info.connections.length)
                        -info.connections.forEach(conn => {
                            p(class="chat_name" data-connection-id=conn.id)= conn.Name  
                        -})
                    else 
                        p You are not connected to anyone
                .groups
                    if(info.groups.length)
                        -info.groups.forEach(group => {
                            p(class="group" data-group-id=group.id)= group.Name
                        -})
                    else 
                        p No Groups Found
            .group_select 

        .messages
            .group_info
                p.g_name
                .docs_media_con
                    .docs_media_button_con
                        button(class='show_members') Members
                        button(class='show_docs') Documents
                        button(class='show_media') Media
                        .add_mem_con
                            button(class='add_mem_btn') Add Member
                    .docs_media  

        .add_member_names_con
            .new_members_names
            .extra_add_mem_con
                button(class='cancel_add_mem') Cancel
                button(class='add_members') Add
            span.empty_selections Please Select aleast one receipent
        
    script(src="/socket.io/socket.io.js")
    script
        include includes/chat.js